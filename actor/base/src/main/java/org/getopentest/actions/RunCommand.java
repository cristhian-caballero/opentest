package org.getopentest.actions;

import java.io.File;
import java.nio.charset.StandardCharsets;
import java.util.Map;
import org.apache.commons.io.IOUtils;
import org.getopentest.base.TestAction;

/**
 * Runs a system command.
 */
public class RunCommand extends TestAction {

    @Override
    public void run() {

        String commandLine = readStringArgument("commandLine");
        Map<String, Object> envVarsMap = this.readMapArgument("envVars", null);
        String workingDir = readStringArgument("workingDir", null);
        Boolean wait = readBooleanArgument("wait", true);
        Integer successExitCode = readIntArgument("successExitCode", null);

        String[] envVars = null;
        if (envVarsMap != null) {
            envVars = envVarsMap.entrySet().stream()
                    .map(e -> e.getKey() + "=" + e.getValue().toString())
                    .toArray(String[]::new);
        }

        Process process;
        Integer exitCode = null;

        try {
            process = Runtime.getRuntime().exec(
                    commandLine,
                    envVars,
                    workingDir != null ? new File(workingDir) : null);
            if (wait || (successExitCode != null)) {
                exitCode = process.waitFor();
            }
        } catch (Exception exc) {
            throw new RuntimeException(exc);
        }

        String stderr = null;
        String stdout = null;
        if (wait) {
            try {
                stderr = IOUtils.toString(process.getErrorStream(), StandardCharsets.UTF_8);
                stdout = IOUtils.toString(process.getInputStream(), StandardCharsets.UTF_8);
            } catch (Exception exc) {
                throw new RuntimeException(exc);
            }
        }
        this.writeOutput("exitCode", exitCode);
        this.writeOutput("stderr", stderr);
        this.writeOutput("stdout", stdout);

        if ((successExitCode != null) && !successExitCode.equals(exitCode)) {
            throw new RuntimeException(String.format(
                    "We expected exit code %s but we got %s.",
                    successExitCode,
                    exitCode));
        }
    }
}
